/*
 * Generated by dtrace(1M).
 */

#ifndef	_PROBES_H
#define	_PROBES_H

#include <unistd.h>

#ifdef	__cplusplus
extern "C" {
#endif

#define TWEETNACL_STABILITY "___dtrace_stability$tweetnacl$v1$1_1_0_1_1_0_1_1_0_1_1_0_1_1_0"

#define TWEETNACL_TYPEDEFS "___dtrace_typedefs$tweetnacl$v2"

#if !defined(DTRACE_PROBES_DISABLED) || !DTRACE_PROBES_DISABLED

#define	TWEETNACL_METHOD_ENTRY(arg0, arg1) \
do { \
	__asm__ volatile(".reference " TWEETNACL_TYPEDEFS); \
	__dtrace_probe$tweetnacl$method__entry$v1$63686172202a$696e74(arg0, arg1); \
	__asm__ volatile(".reference " TWEETNACL_STABILITY); \
} while (0)
#define	TWEETNACL_METHOD_ENTRY_ENABLED() \
	({ int _r = __dtrace_isenabled$tweetnacl$method__entry$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	TWEETNACL_METHOD_RETURN(arg0, arg1) \
do { \
	__asm__ volatile(".reference " TWEETNACL_TYPEDEFS); \
	__dtrace_probe$tweetnacl$method__return$v1$63686172202a$696e74(arg0, arg1); \
	__asm__ volatile(".reference " TWEETNACL_STABILITY); \
} while (0)
#define	TWEETNACL_METHOD_RETURN_ENABLED() \
	({ int _r = __dtrace_isenabled$tweetnacl$method__return$v1(); \
		__asm__ volatile(""); \
		_r; })


extern void __dtrace_probe$tweetnacl$method__entry$v1$63686172202a$696e74(const char *, int);
extern int __dtrace_isenabled$tweetnacl$method__entry$v1(void);
extern void __dtrace_probe$tweetnacl$method__return$v1$63686172202a$696e74(const char *, int);
extern int __dtrace_isenabled$tweetnacl$method__return$v1(void);

#else

#define	TWEETNACL_METHOD_ENTRY(arg0, arg1) \
do { \
	} while (0)
#define	TWEETNACL_METHOD_ENTRY_ENABLED() (0)
#define	TWEETNACL_METHOD_RETURN(arg0, arg1) \
do { \
	} while (0)
#define	TWEETNACL_METHOD_RETURN_ENABLED() (0)

#endif /* !defined(DTRACE_PROBES_DISABLED) || !DTRACE_PROBES_DISABLED */


#ifdef	__cplusplus
}
#endif

#endif	/* _PROBES_H */
